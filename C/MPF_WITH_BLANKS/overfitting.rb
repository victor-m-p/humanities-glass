#!/usr/bin/ruby
$stdout.sync = true

require 'parallel'

[[100, 10], [200, 10], [200, 20], [400, 20], [800, 20], [200, 40], [400, 40], [800, 40], [200, 60], [400, 60], [800, 60]].each { |pair|
  
  big_set=[]
  [0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2].each { |beta|
    start=Time.now
    ans=Parallel.map(Array.new(32*2) {}, in_processes: 32) { 
      str=`./mpf -s #{pair[0]} #{pair[1]} #{beta} 1000` 
      ent=str.scan(/ entropy:[^\n]+\n/)[0].split(" ")[-1].to_f
      base=str.scan(/true:[^\n]+\n/)[0].split(" ")[-1].to_f
      sp=str.scan(/Sp\ [^:]+:[^\n]+\n/) #.sort { |i,j|  j.split(" ")[-1].to_f <=> i.split(" ")[-1].to_f }
      ans=[ent, base]+sp.collect { |i| [i.split(" ")[1].to_f, i.split(" ")[3].to_f, i.split(" ")[10].to_f] }
      ans
    }
    ans.each { |i| 
      big_set << [beta, i[0], i[1], i[2..-1].collect { |j| j[-1]-i[1] }].flatten
    }
    print "Finished #{beta} #{pair} #{(Time.now-start)/60.0} minutes\n"
  }

  file=File.new("DATA/#{pair[0]}samples_#{pair[1]}nodes.dat", 'w')
  file.write(Marshal.dump(big_set)); file.close

}


require 'parallel'

big=[]
ans=[]
ans += Parallel.map(Array.new(160) {}, in_processes: 8) { 
  beta=1.3*rand
  str=`./mpf -s 100 20 #{beta} 1000 2>&1` 
  if !str.include?("ERROR") then
    ent=str.scan(/NSB entropy:[^\n]+\n/)[0].split(" ")[-1].to_f
    ent_n=str.scan(/Naieve entropy:[^\n]+\n/)[0].split(" ")[-1].to_f
    lambda=str.scan(/Best[^\n]+\n/)[0].split(" ")[3].to_f
    val=str.scan(/Best[^\n]+\n/)[0].split(" ")[5].to_f
    val_zero=str.scan(/Sp 0.0[^\n]+\n/)[0].split(" ")[-1].to_f
    val_one=str.scan(/Sp 1.0[^\n]+\n/)[0].split(" ")[-1].to_f
    big_list = str.scan(/Sp [^\n]+\n/).collect { |i| [i.split(" ")[1].to_f, i.split(" ")[-1].to_f] }
    big << [beta, ent, ent_n, big_list]
    [beta, ent, ent_n, lambda, val, val_zero]
  else
    print "#{beta}\n"
    nil
  end
}

ans_10=[[0.6411112190054713, 4.187132, 3.987336, -0.6, -0.275345], [0.549616044380133, 3.94429, 3.592362, 0.2, -0.236153], [1.211614384606957, 0.536036, 0.506083, 0.2, -0.210377], [0.6562928987686496, 1.950509, 1.844924, -0.6, -0.035203], [0.7291129691404078, 0.792451, 0.743042, 0.4, -0.439796], [0.28514941886179135, 6.374744, 6.296307, 0.6, -0.268839], [0.649887465025436, 4.57503, 4.314248, -0.6, -0.114371], [1.0011886407479542, 1.347526, 1.291664, 0.0, -0.022471], [0.056432723781777806, 6.563856, 6.563856, 1.8, -0.072771], [1.042324756736177, 1.911858, 1.870636, 0.4, -0.330566], [0.1726063602059456, 6.42649, 6.368758, 1.0, -0.168249], [0.4721412002537282, 4.328833, 4.075813, 0.0, -0.17835], [0.4895661366212432, 4.242225, 3.981001, -0.2, -0.157539], [0.9427289498557938, 3.019739, 2.949162, -1.6, -0.042997], [0.804869116085978, 3.326165, 3.138332, -0.4, -0.200451], [1.0165103545881171, 2.109455, 2.021956, -0.8, -0.107152], [0.3835936386071153, 6.113752, 5.906112, 0.2, -0.196196], [0.24655143608239644, 6.318327, 6.193661, 0.8, -0.284689], [1.0191088776718784, 0.896405, 0.82346, 0.2, -0.123998], [0.5993243811361196, 3.278184, 3.186273, 0.0, -0.163095], [0.9261353399363673, 2.443354, 2.367576, 0.2, -0.046016], [0.9845254086528581, 2.457843, 2.405466, -1.6, -0.067132], [0.3824577428793303, 5.372296, 5.069736, 0.4, -0.276546], [0.08732751871989357, 6.524157, 6.503856, 1.4, -0.143493], [0.5679397307077938, 4.276931, 4.10133, -0.2, -0.197853], [1.258107892941606, 2.338134, 2.282633, -0.2, 0.003101], [0.13501503092641018, 6.508117, 6.476307, 1.0, -0.183252], [0.9250761583229435, 3.302281, 3.127547, -0.4, -0.136632], [0.347279680023594, 5.425885, 5.144562, 0.2, -0.149207], [0.9365170926488686, 2.493686, 2.452377, -0.6, -0.182957], [0.9961618956413613, 2.809476, 2.730911, -1.0, -0.038708], [1.2622301376767644, 2.298625, 2.190361, -0.6, -0.283926], [0.07422353136945667, 6.492214, 6.456307, 1.8, -0.11587], [1.0414857075143533, 3.572447, 3.410952, -0.4, -0.163537], [0.09480372340948313, 6.554829, 6.536307, 1.4, -0.130925], [1.0393322667799687, 2.682928, 2.577484, -1.2, -0.1145], [0.4407836635711857, 5.585714, 5.280819, 0.2, -0.175704], [1.2322149366531117, 1.375213, 1.3194, -0.2, -0.151073], [0.9512363469357178, 1.428493, 1.363375, -1.0, -0.096836], [0.5782340029906629, 3.124808, 2.927613, 0.0, -0.242016], [0.6478149611474678, 4.371847, 4.190561, 0.0, -0.479691], [1.2598785052547106, 2.641766, 2.564553, -1.0, -0.128644], [1.0778862220688368, 3.021465, 2.883897, -1.0, -0.105682], [0.25359869420684733, 6.087408, 5.96121, 0.8, -0.268063], [0.5561108118501398, 3.939725, 3.756565, 0.2, -0.245889], [0.3414421546169455, 4.870725, 4.55128, 0.6, -0.224018], [0.6211646323517644, 3.384547, 3.235182, -0.2, -0.098242], [0.6414186617393499, 2.764031, 2.67267, -0.2, -0.380175], [1.238834066476212, 1.948833, 1.905251, -1.4, -0.000973], [0.3944472584910653, 6.06127, 5.817146, 0.4, -0.206337], [0.8802668091122441, 3.151761, 3.023416, 0.0, -0.052543], [0.6433430505185709, 1.620291, 1.562231, 0.2, 0.119762], [0.7527401713012184, 3.334074, 3.173253, -0.6, -0.181786], [0.5347223943022236, 5.201375, 4.94019, 0.0, -0.23561], [0.9694528227621446, 1.893415, 1.837519, 0.2, 0.085006], [0.4396453102489352, 4.413432, 4.184922, 0.2, -0.123338], [1.2423215911974854, 2.733511, 2.674228, -0.2, -0.085996], [1.269728237749278, 2.363215, 2.343165, -1.6, -0.017497], [0.6160005070554224, 2.081783, 1.97283, 0.0, -0.074201], [0.4943590751593752, 5.244252, 4.968798, 0.0, -0.287202], [0.5146634063099861, 3.720541, 3.463832, -0.2, -0.22135], [0.8330917117612313, 0.776393, 0.73691, 0.2, 0.03245], [0.6017545288241949, 4.48713, 4.238501, -0.2, -0.212855], [0.34023526980508656, 5.967385, 5.765113, 0.2, -0.292006], [0.9060246084589125, 2.513077, 2.448096, -0.6, -0.077198], [1.2222855361457734, 0.154246, 0.141441, 0.2, -0.188663], [0.07627507956361115, 6.563856, 6.563856, 1.6, -0.103772], [0.9688144245386046, 2.687288, 2.632106, 0.0, -0.083652], [1.0331632534382342, 3.238796, 3.123083, -0.8, -0.164497], [0.5389483979009619, 3.286616, 3.118856, -0.2, -0.191228], [0.5108505878553898, 4.354038, 4.173626, -0.2, -0.189924], [0.3640128794790855, 5.573588, 5.301468, 0.4, -0.210674], [1.255101815816675, 2.287682, 2.242922, -1.0, -0.09791], [0.9266879331195642, 2.097364, 1.977585, 0.0, -0.192125], [1.1514206830327673, 0.544704, 0.51463, -1.6, -0.423028], [0.3099317331532643, 5.709571, 5.436175, 0.6, -0.209737], [0.8647840586034659, 1.520798, 1.482287, -0.6, -0.050416], [0.015184164061386608, 6.555124, 6.543856, 1.8, -0.04046], [0.4799152945432218, 4.494326, 4.247017, 0.0, -0.275226], [1.116960956284602, 1.436016, 1.370187, 0.2, -0.335349], [1.0591100578864843, 1.243219, 1.221366, 0.4, -0.28157], [0.7542177802675636, 3.847469, 3.602776, -0.4, -0.20885], [0.49919502750274913, 5.238503, 4.981409, 0.2, -0.234294], [0.3145762582445673, 4.885528, 4.543334, 0.4, -0.221218], [0.46788571351016567, 2.719556, 2.572546, 0.0, -0.161098], [1.2840969177715125, 1.037983, 1.024757, -0.2, -0.063328], [0.29205231645484714, 6.11856, 5.922467, 0.6, -0.255487], [0.8861314822060832, 0.0, 0.0, 0.2, -0.130552], [1.026154472229757, 1.887553, 1.812168, 0.2, -0.309237], [1.0713888694594251, 2.338183, 2.294026, -0.6, -0.10937], [0.0393836010967763, 6.524157, 6.503856, 1.8, -0.05538], [0.9548588414228747, 1.199799, 1.158322, 0.2, 0.09115], [0.4061737940301962, 5.142949, 4.90621, 0.0, -0.208057], [0.6988905717328491, 1.354728, 1.257384, -0.2, 0.009359], [0.6373110652095365, 2.329492, 2.24444, 0.4, -0.149946], [0.8209798203532263, 3.580576, 3.376727, -0.2, -0.329346], [0.9254967810018436, 0.36305, 0.322292, 0.0, 0.023161], [0.33792902355411863, 5.159802, 4.871472, 0.4, -0.162108], [0.6708815626253287, 2.7608, 2.625953, -0.2, -0.24563], [0.8743420792335957, 1.9536, 1.871472, 0.2, -0.1501], [0.2657738925919041, 6.206349, 5.987369, 0.6, -0.274979], [0.35154013038407644, 5.79792, 5.517823, 0.4, -0.274647], [0.16977559948527335, 6.37356, 6.280211, 1.0, -0.171168], [0.8562546507725065, 2.775257, 2.707466, -1.2, -0.149688], [0.8694305438416609, 1.361791, 1.294374, 0.0, -0.169254], [0.700839492847553, 2.466497, 2.357024, -0.2, -0.228519], [0.3018486121567451, 5.822111, 5.533082, 0.6, -0.229077], [0.18088028967203976, 6.442407, 6.376307, 0.6, -0.191118], [0.5907347023745141, 4.31587, 4.130055, 0.0, -0.213641], [0.3539466527418279, 3.350609, 3.172544, 0.4, -0.186736], [0.4099327907617009, 4.883124, 4.556175, 0.2, -0.225785], [0.19356333164508163, 6.34121, 6.34121, 0.8, -0.275054], [0.5181297581961004, 1.701752, 1.523869, -0.6, -0.156309], [0.023091513804666865, 6.539722, 6.523856, 1.8, -0.035841], [0.31876292134755096, 4.998022, 4.696147, 0.4, -0.212911], [1.1962982103344597, 3.276435, 3.166895, -0.8, -0.198], [0.5995433327133882, 2.635529, 2.533606, 0.2, -0.165099], [1.2288046891671305, 1.828309, 1.794715, -1.0, 0.014278], [0.43941204342744083, 5.143824, 4.843979, 0.2, -0.213039], [0.20468790479170004, 6.374712, 6.293661, 0.8, -0.191526], [0.12129875382363084, 6.476138, 6.436307, 1.2, -0.200693], [0.3164443217948603, 5.531472, 5.242076, 0.2, -0.287903], [0.277565994378244, 5.945214, 5.676566, 0.4, -0.215065], [0.2321808366985631, 6.392685, 6.328758, 0.6, -0.168492], [0.1482719104374288, 6.47295, 6.388758, 1.2, -0.251292], [0.9526889620128689, 1.722493, 1.699448, 0.4, -0.0927], [0.14007162433195816, 6.523852, 6.496307, 1.0, -0.208935], [0.7482884986688851, 4.355462, 4.13121, -0.8, -0.175496], [0.1103013388758003, 6.524157, 6.503856, 1.2, -0.21041], [0.5512919429379295, 3.602257, 3.417942, 0.0, -0.202064], [0.3576445819453025, 5.515585, 5.222768, 0.4, -0.163005], [0.9049050914424294, 3.217411, 3.086226, -0.4, -0.181303], [0.9936840872011072, 1.732296, 1.709487, 0.2, -0.415172], [0.48187276585242383, 4.507378, 4.239485, 0.0, -0.253757], [0.15458929127525076, 6.339309, 6.248758, 0.8, -0.212772], [0.13407903819941364, 6.508428, 6.483856, 1.2, -0.188527], [0.4814271947802389, 5.354527, 5.092182, 0.4, -0.21106], [0.007554232826493235, 6.585454, 6.583856, 1.8, -0.004499], [0.7182618088353236, 3.367808, 3.207636, -0.4, -0.209043], [0.40508595621675814, 3.110083, 2.952755, 0.2, -0.098692], [1.216674334156755, 2.696753, 2.58032, -1.2, -0.125759], [1.1638666627145333, 3.378539, 3.225643, -0.8, -0.292356], [0.5567217643142802, 4.840293, 4.601308, -0.2, -0.165892], [0.5344816425570106, 3.493949, 3.285973, 0.2, -0.191922], [0.8574781570269766, 1.378119, 1.319269, -1.2, -0.228601], [0.8856542059571647, 2.073851, 1.943938, -0.6, -0.040939], [0.49844232755310103, 5.229323, 4.946599, 0.2, -0.33485], [0.3369530471269515, 4.940986, 4.67406, 0.2, -0.257484], [0.7636144773984355, 4.087407, 3.905771, -0.6, -0.117727], [1.0906101653991573, 1.233437, 1.202517, -1.0, -0.032909], [0.40110951207066775, 6.110765, 5.900819, 0.4, -0.31889], [0.2604405541134052, 6.061806, 5.894918, 0.6, -0.190688], [0.6629050805153358, 3.175962, 3.07791, -0.2, -0.309371], [0.6258075473801882, 4.150566, 3.996244, -0.2, -0.180304], [0.34193398266306174, 5.298187, 5.03966, 0.2, -0.134972], [0.10059410865457563, 6.396307, 6.396307, 1.4, -0.211483], [0.05075860298293359, 6.508117, 6.476307, 1.4, -0.075004], [0.47726670404635785, 4.467552, 4.244429, 0.0, -0.255665], [0.3079638973909621, 5.684712, 5.395756, 0.4, -0.209089], [1.2795532154109799, 3.263719, 3.133213, -1.2, -0.22911]]

plot, ans[1,*], ans[3,*], psym=4


Time.now
ans=Parallel.map(Array.new(160) {}, in_processes: 8) { 
  beta=1.3*rand
  str=`./mpf -o 100 20 #{beta} 1000 0 3` 

  ent=str.scan(/NSB entropy:[^\n]+\n/)[0].split(" ")[-1].to_f
  ent_n=str.scan(/Naieve entropy:[^\n]+\n/)[0].split(" ")[-1].to_f
  val=str.scan(/inferred:[^\n]+\n/)[0].split(" ")[-1].to_f
  [beta, ent, ent_n, val]
}
Time.now



